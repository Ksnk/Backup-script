   Скрипт предназначен для создания sql-dump'ов для MySql базы данных и для восстановления баз
по существующим дампам. Скрипт может пользоваться дампами, созданными практически всеми программами
работы с MySql. phpMyAdmin, SypexDumper, SQLYog...

  Скрипт может работать в online режиме, и в режиме управления через адресную строку.

   Управление через адресную строку броузера

   Параметры передаются в URI стиле, после символа `?` Парамеры restore и backup определяют непосредственное
выполнение операции скриптом. При отсутствии этих параметров скрипт выведет форму online режима.

Примеры:
   backup.php?restore&file=tmp.sql&code=cp1251 - восстановление базы из файла tmp.sql. Используется
кодовая таблица cp1251
   backup.php?backup&include=darts_*,SESSION&exclude=*_tmp - создание backup'а с использованием таблиц,
с именами подходящими под маску darts_* или SESSION и не подходящих под маску *_tmp

список возможных параметров.
// настройка на базу
        'host'=>'localhost', // хост
        'user'=>'root', // имя-пароль
        'password'=>'',
эти параметры передавать черех адресную строку опасно, так что более корректно будет поправить их значения
в исходнике скрипта.
        'base'=>'tmp',  // имя базы данных

//  backup-only параметры
        'include'=>'*', // маска в DOS стиле со * и ? . backup-only
        'exclude'=>'',  // маска в DOS стиле со * и ? . backup-only
        'compress'=>9, // уровень компрессии для gz  . backup-only
        'method'=>'sql.gz', // 'sql.gz'|'sql.bz2'|'sql' - использовать gz или нет
        'onthefly'=>false , // вывод гзипа прямо в броузер. Ошибки, правда, теряются напрочь...
//  both-way параметры
        'file'=>'',  // имя файла SQL-дампа для чтения или каталог (с / на конце) для создания базы
        'code'=>'utf8', // set NAMES 'code'
        'progress'=>'', // функция для calback'а progress bar'a
        'progressdelay'=>1, // время между тиками callback прогресс бара [0.5== полсекунды]
//  restore-only параметры
        'sql'=>'', // plain sql to execute with backup class.

   Управление в online-режиме

   В этом случае в броузер выводится форма с полями
   -- поле загрузки файла. Можно загрузить дамп и восстановить базу по нему. Реальной загрузки
файла не происходит, после восстановления файл удаляется.
   -- поле вставки дампа. Не стоит вставлять сюда очень большой текст. При вставке следует следить за корректностью
русских букв. Если во вставленном тексте закорюки - что-то делается неправильно :)
   -- поле выбора уже загруженного файла. Каталог, из которого будут выбираться файлв определяется параметром
file адресной строки. Каталог из этого параметра и является тем самым каталогом.
   Чтобы выбрать восстановление дампа одним из этих способов нужно выбрать переключатель "restore"

   чтобы создать sql-дамп нужно выбрать переключатель "backup". Если при этом отметить флаг
"не сохранять дамп на сервере" - созданный дамп будет отправлен прямо в броузер для сохранения на диске.

   Тип создаваемого дампа определяется с помощью параметра method. Если параметр
отсутствует - создается gzip архив.


>>>>>>>>>>>>>>>>> разные заготовки <<<<<<<<<<<<<<<<<<<<<<<<<<<

    Немного лирики

Как-то попался на глаза скрипт для создания бякапа базы данных. Вспомнилось, что заказчик давно плакался,
что моей админке не хватает кнопочки "сохрани базу/восстанови базу", а я ему втирал, что это ответственное
и сложное дело (так оно, в принципе и есть) и "вот я для этого поставил SypexDumper - смотри как харашо"
(и это дествительно непллохо). Однако осадочек остался...

Привлекательного в том скрипте, как оказалось, было только то, что он занимал 100 строк, однако он спровоцировал
меня на попытку его использовать и написать что-то свое.

Для информации - я знаю про SypexDumper и некоторые решения оттуда использовал. Также я знаю про phpMyAdmin и mysqldumper

Польза самодельного скрипта в том, что он занимает 300 строк слегка откоментаренного текста  и написан мной, что для
любого девелопера представляет несомненную и непреходящую пользу ;)
Понимает файлы от phpMyAdmin и от SypexDumper, работает с gz. Умеен делать дампы и отгружать их в броузер "на лету",без
использования файлов.
Также при создании бякапа он не лочит базу, а проверяет
время модификации таблиц. Если таблицы изменились за время построения бякапа - бякап пересоздается. Такое решение сразу
ограничивает нам применение скрипта на "не очень нагруженные" сайты + никуда не делось пока (и не хочу убирать)
ограничение в 30 секунд на время выполнения скрипта (user_ignore_abort). Зато база не лочится и сайт не проседает...

Из ограничений выходит предназначение: Скрипт предназначен для восстановления после аварии при наличии бякапа и
при отсутствии штатных средств восстановления + для создания бякапа "по требованию". Размер базы имеет значение
(не очень большие - не более 30 секунд на бякап -восстановление).
Он представляет собой единственный файл, его легче доставить на сайт, чем более сложную утилиту.




